
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'H\xc8\xec\x81\xa5\xe8\xdf\x8f{\xd3\xe4\xce5B\r\xcf'
    
_lr_action_items = {'TkTrue':([0,2,7,10,26,33,45,47,48,49,50,51,52,53,54,57,60,66,72,80,84,89,],[13,13,13,13,13,13,-40,-44,-45,-41,-43,-42,-39,13,-46,13,13,13,13,13,13,13,]),'TkMod':([5,9,11,21,23,29,31,64,67,70,73,],[-16,-17,36,-17,36,-17,36,-15,36,-17,36,]),'TkIf':([0,57,60,66,80,84,89,],[2,2,2,2,2,2,2,]),'TkResta':([0,1,5,7,9,11,21,22,23,29,31,33,35,36,37,38,39,40,45,47,48,49,50,51,52,53,54,57,60,64,66,67,70,72,73,80,84,89,],[1,1,-16,1,-17,35,-17,1,-14,-17,35,1,-35,-38,-37,-36,1,-34,-40,-44,-45,-41,-43,-42,-39,1,-46,1,1,-15,1,35,-17,1,35,1,1,1,]),'TkNegacion':([4,5,9,13,14,19,21,23,24,25,29,30,34,43,46,55,62,63,64,67,68,69,70,71,73,],[-27,-16,-28,-26,46,-33,-17,-14,-28,46,-28,46,46,-32,-25,-31,-30,-24,-15,-13,-29,-23,-17,46,-22,]),'TkParAbre':([0,1,2,7,10,15,22,26,33,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,56,57,60,66,72,80,84,89,],[7,22,26,7,26,56,22,26,7,-35,-38,-37,-36,22,-34,-48,-47,56,-40,-44,-45,-41,-43,-42,-39,72,-46,56,7,7,7,72,7,7,7,]),'TkVerConcat':([12,19,28,43,55,62,68,69,],[41,-33,41,-32,-31,-30,41,41,]),'TkFalse':([0,2,7,10,26,33,45,47,48,49,50,51,52,53,54,57,60,66,72,80,84,89,],[4,4,4,4,4,4,-40,-44,-45,-41,-43,-42,-39,4,-46,4,4,4,4,4,4,4,]),'TkConjuncion':([4,5,9,13,14,19,21,23,24,25,29,30,34,43,46,55,62,63,64,67,68,69,70,71,73,],[-27,-16,-28,-26,48,-33,-17,-14,-28,48,-28,48,48,-32,-25,-31,-30,-24,-15,-13,-29,-23,-17,48,-22,]),'TkNum':([0,1,7,17,22,33,35,36,37,38,39,40,45,47,48,49,50,51,52,53,54,57,60,61,66,72,75,80,82,84,89,],[5,5,5,58,5,5,-35,-38,-37,-36,5,-34,-40,-44,-45,-41,-43,-42,-39,5,-46,5,5,77,5,5,79,5,86,5,5,]),'TkWith':([0,57,60,66,80,84,89,],[6,6,6,6,6,6,6,]),'TkDesIgual':([4,5,9,13,14,19,21,23,24,25,29,30,34,43,46,55,62,63,64,67,68,69,70,71,73,],[-27,-16,-28,-26,47,-33,-17,-14,-28,47,-28,47,47,-32,-25,-31,-30,-24,-15,-13,-29,-23,-17,47,-22,]),'TkDone':([4,5,9,11,12,13,14,18,19,21,23,29,32,43,46,55,59,62,63,64,65,67,68,69,70,71,73,76,78,81,83,85,87,88,90,91,92,],[-27,-16,-17,-18,-20,-26,-19,-12,-33,-17,-14,-17,-11,-32,-25,-31,-10,-30,-24,-15,-4,-13,-29,-23,-17,-21,-22,81,83,-6,-7,88,90,-5,-9,92,-8,]),'TkRead':([0,57,60,66,80,84,89,],[8,8,8,8,8,8,8,]),'TkMenorIgual':([4,5,9,13,14,19,21,23,24,25,29,30,34,43,46,55,62,63,64,67,68,69,70,71,73,],[-27,-16,-28,-26,45,-33,-17,-14,-28,45,-28,45,45,-32,-25,-31,-30,-24,-15,-13,-29,-23,-17,45,-22,]),'TkIdent':([0,1,2,6,7,8,10,22,26,33,35,36,37,38,39,40,45,47,48,49,50,51,52,53,54,57,60,66,72,80,84,89,],[9,21,24,27,29,32,24,21,24,29,-35,-38,-37,-36,21,-34,-40,-44,-45,-41,-43,-42,-39,70,-46,9,9,9,70,9,9,9,]),'TkMult':([5,9,11,21,23,29,31,64,67,70,73,],[-16,-17,38,-17,38,-17,38,-15,38,-17,38,]),'TkDisyuncion':([4,5,9,13,14,19,21,23,24,25,29,30,34,43,46,55,62,63,64,67,68,69,70,71,73,],[-27,-16,-28,-26,54,-33,-17,-14,-28,54,-28,54,54,-32,-25,-31,-30,-24,-15,-13,-29,-23,-17,54,-22,]),'TkWhile':([0,57,60,66,80,84,89,],[10,10,10,10,10,10,10,]),'TkMayor':([4,5,9,13,14,19,21,23,24,25,29,30,34,43,46,55,62,63,64,67,68,69,70,71,73,],[-27,-16,-28,-26,49,-33,-17,-14,-28,49,-28,49,49,-32,-25,-31,-30,-24,-15,-13,-29,-23,-17,49,-22,]),'$end':([3,4,5,9,11,12,13,14,16,18,19,21,23,29,32,43,46,55,59,62,63,64,65,67,68,69,70,71,73,74,81,83,88,90,92,],[-2,-27,-16,-17,-18,-20,-26,-19,0,-12,-33,-17,-14,-17,-11,-32,-25,-31,-10,-30,-24,-15,-4,-13,-29,-23,-17,-21,-22,-1,-6,-7,-5,-9,-8,]),'TkPuntoYComa':([3,4,5,9,11,12,13,14,16,18,19,21,23,29,32,43,46,55,59,62,63,64,65,67,68,69,70,71,73,74,81,83,88,90,92,],[-2,-27,-16,-17,-18,-20,-26,-19,57,-12,-33,-17,-14,-17,-11,-32,-25,-31,-10,-30,-24,-15,-4,-13,-29,-23,-17,-21,-22,-1,-6,-7,-5,-9,-8,]),'TkAsignacion':([9,],[33,]),'TkElse':([4,5,9,11,12,13,14,18,19,21,23,29,32,43,46,55,59,62,63,64,65,67,68,69,70,71,73,76,81,83,88,90,92,],[-27,-16,-17,-18,-20,-26,-19,-12,-33,-17,-14,-17,-11,-32,-25,-31,-10,-30,-24,-15,-4,-13,-29,-23,-17,-21,-22,80,-6,-7,-5,-9,-8,]),'TkHorConcat':([12,19,28,43,55,62,68,69,],[42,-33,42,-32,-31,-30,42,42,]),'TkDiv':([5,9,11,21,23,29,31,64,67,70,73,],[-16,-17,37,-17,37,-17,37,-15,37,-17,37,]),'TkTras':([12,19,28,43,55,62,68,69,],[43,-33,43,-32,43,-30,43,43,]),'TkIgual':([4,5,9,13,14,19,21,23,24,25,29,30,34,43,46,55,62,63,64,67,68,69,70,71,73,],[-27,-16,-28,-26,50,-33,-17,-14,-28,50,-28,50,50,-32,-25,-31,-30,-24,-15,-13,-29,-23,-17,50,-22,]),'TkTo':([58,77,],[75,82,]),'TkMenor':([4,5,9,13,14,19,21,23,24,25,29,30,34,43,46,55,62,63,64,67,68,69,70,71,73,],[-27,-16,-28,-26,52,-33,-17,-14,-28,52,-28,52,52,-32,-25,-31,-30,-24,-15,-13,-29,-23,-17,52,-22,]),'TkRot':([0,7,15,33,41,42,44,45,47,48,49,50,51,52,53,54,56,57,60,66,72,80,84,89,],[15,15,15,15,-48,-47,15,-40,-44,-45,-41,-43,-42,-39,15,-46,15,15,15,15,15,15,15,15,]),'TkRepeat':([4,5,13,19,21,23,24,34,43,46,55,62,63,64,67,68,69,70,71,73,79,86,],[-27,-16,-26,-33,-17,-14,-28,66,-32,-25,-31,-30,-24,-15,-13,-29,-23,-17,-21,-22,84,89,]),'TkMayorIgual':([4,5,9,13,14,19,21,23,24,25,29,30,34,43,46,55,62,63,64,67,68,69,70,71,73,],[-27,-16,-28,-26,51,-33,-17,-14,-28,51,-28,51,51,-32,-25,-31,-30,-24,-15,-13,-29,-23,-17,51,-22,]),'TkParCierra':([4,5,13,19,21,23,24,28,29,30,31,43,46,55,62,63,64,67,68,69,70,71,73,],[-27,-16,-26,-33,-17,-14,-28,62,-17,63,64,-32,-25,-31,-30,-24,-15,-13,-29,-23,-17,-21,-22,]),'TkFrom':([0,27,57,60,66,80,84,89,],[17,61,17,17,17,17,17,17,]),'TkThen':([4,5,13,19,21,23,24,25,43,46,55,62,63,64,67,68,69,70,71,73,],[-27,-16,-26,-33,-17,-14,-28,60,-32,-25,-31,-30,-24,-15,-13,-29,-23,-17,-21,-22,]),'TkLienzo':([0,7,15,20,33,41,42,44,45,47,48,49,50,51,52,53,54,56,57,60,66,72,80,84,89,],[19,19,19,59,19,-48,-47,19,-40,-44,-45,-41,-43,-42,-39,19,-46,19,19,19,19,19,19,19,19,]),'TkSuma':([5,9,11,21,23,29,31,64,67,70,73,],[-16,-17,40,-17,-14,-17,40,-15,40,-17,40,]),'TkPrint':([0,57,60,66,80,84,89,],[20,20,20,20,20,20,20,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instr':([0,57,60,66,80,84,89,],[3,74,76,78,85,87,91,]),'expr':([0,],[16,]),'lienzo':([0,7,15,33,44,53,56,57,60,66,72,80,84,89,],[12,28,55,12,68,69,28,12,12,12,28,12,12,12,]),'expbin':([0,33,57,60,66,80,84,89,],[18,65,18,18,18,18,18,18,]),'booleana':([0,2,7,10,26,33,53,57,60,66,72,80,84,89,],[14,25,30,34,30,14,71,14,14,14,30,14,14,14,]),'operatorA':([11,23,31,67,73,],[39,39,39,39,39,]),'operatorB':([14,25,30,34,71,],[53,53,53,53,53,]),'arit':([0,1,7,22,33,39,53,57,60,66,72,80,84,89,],[11,23,31,31,11,67,73,11,11,11,31,11,11,11,]),'operatorL':([12,28,55,68,69,],[44,44,44,44,44,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> expr TkPuntoYComa instr','expr',3,'p_expr','./parser',343),
  ('expr -> instr','expr',1,'p_expr','./parser',344),
  ('empty -> <empty>','empty',0,'p_empty','./parser',351),
  ('instr -> TkIdent TkAsignacion expbin','instr',3,'p_instr','./parser',356),
  ('instr -> TkIf booleana TkThen instr TkElse instr TkDone','instr',7,'p_instr','./parser',357),
  ('instr -> TkIf booleana TkThen instr TkDone','instr',5,'p_instr','./parser',358),
  ('instr -> TkWhile booleana TkRepeat instr TkDone','instr',5,'p_instr','./parser',359),
  ('instr -> TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone','instr',9,'p_instr','./parser',360),
  ('instr -> TkFrom TkNum TkTo TkNum TkRepeat instr TkDone','instr',7,'p_instr','./parser',361),
  ('instr -> TkPrint TkLienzo','instr',2,'p_instr','./parser',362),
  ('instr -> TkRead TkIdent','instr',2,'p_instr','./parser',363),
  ('instr -> expbin','instr',1,'p_instr','./parser',364),
  ('arit -> arit operatorA arit','arit',3,'p_arit','./parser',389),
  ('arit -> TkResta arit','arit',2,'p_arit','./parser',390),
  ('arit -> TkParAbre arit TkParCierra','arit',3,'p_arit','./parser',391),
  ('arit -> TkNum','arit',1,'p_arit','./parser',392),
  ('arit -> TkIdent','arit',1,'p_arit','./parser',393),
  ('expbin -> arit','expbin',1,'p_expbin','./parser',415),
  ('expbin -> booleana','expbin',1,'p_expbin','./parser',416),
  ('expbin -> lienzo','expbin',1,'p_expbin','./parser',417),
  ('booleana -> booleana operatorB booleana','booleana',3,'p_booleana','./parser',422),
  ('booleana -> booleana operatorB arit','booleana',3,'p_booleana','./parser',423),
  ('booleana -> booleana operatorB lienzo','booleana',3,'p_booleana','./parser',424),
  ('booleana -> TkParAbre booleana TkParCierra','booleana',3,'p_booleana','./parser',425),
  ('booleana -> booleana TkNegacion','booleana',2,'p_booleana','./parser',426),
  ('booleana -> TkTrue','booleana',1,'p_booleana','./parser',427),
  ('booleana -> TkFalse','booleana',1,'p_booleana','./parser',428),
  ('booleana -> TkIdent','booleana',1,'p_booleana','./parser',429),
  ('lienzo -> lienzo operatorL lienzo','lienzo',3,'p_lienzo','./parser',456),
  ('lienzo -> TkParAbre lienzo TkParCierra','lienzo',3,'p_lienzo','./parser',457),
  ('lienzo -> TkRot lienzo','lienzo',2,'p_lienzo','./parser',458),
  ('lienzo -> lienzo TkTras','lienzo',2,'p_lienzo','./parser',459),
  ('lienzo -> TkLienzo','lienzo',1,'p_lienzo','./parser',460),
  ('operatorA -> TkSuma','operatorA',1,'p_operatorA','./parser',474),
  ('operatorA -> TkResta','operatorA',1,'p_operatorA','./parser',475),
  ('operatorA -> TkMult','operatorA',1,'p_operatorA','./parser',476),
  ('operatorA -> TkDiv','operatorA',1,'p_operatorA','./parser',477),
  ('operatorA -> TkMod','operatorA',1,'p_operatorA','./parser',478),
  ('operatorB -> TkMenor','operatorB',1,'p_operatorB','./parser',482),
  ('operatorB -> TkMenorIgual','operatorB',1,'p_operatorB','./parser',483),
  ('operatorB -> TkMayor','operatorB',1,'p_operatorB','./parser',484),
  ('operatorB -> TkMayorIgual','operatorB',1,'p_operatorB','./parser',485),
  ('operatorB -> TkIgual','operatorB',1,'p_operatorB','./parser',486),
  ('operatorB -> TkDesIgual','operatorB',1,'p_operatorB','./parser',487),
  ('operatorB -> TkConjuncion','operatorB',1,'p_operatorB','./parser',488),
  ('operatorB -> TkDisyuncion','operatorB',1,'p_operatorB','./parser',489),
  ('operatorL -> TkHorConcat','operatorL',1,'p_operatorL','./parser',493),
  ('operatorL -> TkVerConcat','operatorL',1,'p_operatorL','./parser',494),
]
