Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    TkComa
    TkCanvas
    TkUsing
    TkBegin
    TkOfType
    TkEnd
    TkBoolean
    TkInteger

Grammar

Rule 0     S' -> expr
Rule 1     expr -> expr TkPuntoYComa instr
Rule 2     expr -> instr
Rule 3     empty -> <empty>
Rule 4     instr -> TkIdent TkAsignacion expbin
Rule 5     instr -> TkIf booleana TkThen instr TkElse instr TkDone
Rule 6     instr -> TkIf booleana TkThen instr TkDone
Rule 7     instr -> TkWhile booleana TkRepeat instr TkDone
Rule 8     instr -> TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
Rule 9     instr -> TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
Rule 10    instr -> TkPrint TkLienzo
Rule 11    instr -> TkRead TkIdent
Rule 12    instr -> expbin
Rule 13    arit -> arit operatorA arit
Rule 14    arit -> TkResta arit
Rule 15    arit -> TkParAbre arit TkParCierra
Rule 16    arit -> TkNum
Rule 17    arit -> TkIdent
Rule 18    expbin -> arit
Rule 19    expbin -> booleana
Rule 20    expbin -> lienzo
Rule 21    booleana -> booleana operatorB booleana
Rule 22    booleana -> booleana operatorB arit
Rule 23    booleana -> booleana operatorB lienzo
Rule 24    booleana -> TkParAbre booleana TkParCierra
Rule 25    booleana -> booleana TkNegacion
Rule 26    booleana -> TkTrue
Rule 27    booleana -> TkFalse
Rule 28    booleana -> TkIdent
Rule 29    lienzo -> lienzo operatorL lienzo
Rule 30    lienzo -> TkParAbre lienzo TkParCierra
Rule 31    lienzo -> TkRot lienzo
Rule 32    lienzo -> lienzo TkTras
Rule 33    lienzo -> TkLienzo
Rule 34    operatorA -> TkSuma
Rule 35    operatorA -> TkResta
Rule 36    operatorA -> TkMult
Rule 37    operatorA -> TkDiv
Rule 38    operatorA -> TkMod
Rule 39    operatorB -> TkMenor
Rule 40    operatorB -> TkMenorIgual
Rule 41    operatorB -> TkMayor
Rule 42    operatorB -> TkMayorIgual
Rule 43    operatorB -> TkIgual
Rule 44    operatorB -> TkDesIgual
Rule 45    operatorB -> TkConjuncion
Rule 46    operatorB -> TkDisyuncion
Rule 47    operatorL -> TkHorConcat
Rule 48    operatorL -> TkVerConcat

Terminals, with rules where they appear

TkAsignacion         : 4
TkBegin              : 
TkBoolean            : 
TkCanvas             : 
TkComa               : 
TkConjuncion         : 45
TkDesIgual           : 44
TkDisyuncion         : 46
TkDiv                : 37
TkDone               : 5 6 7 8 9
TkElse               : 5
TkEnd                : 
TkFalse              : 27
TkFrom               : 8 9
TkHorConcat          : 47
TkIdent              : 4 8 11 17 28
TkIf                 : 5 6
TkIgual              : 43
TkInteger            : 
TkLienzo             : 10 33
TkMayor              : 41
TkMayorIgual         : 42
TkMenor              : 39
TkMenorIgual         : 40
TkMod                : 38
TkMult               : 36
TkNegacion           : 25
TkNum                : 8 8 9 9 16
TkOfType             : 
TkParAbre            : 15 24 30
TkParCierra          : 15 24 30
TkPrint              : 10
TkPuntoYComa         : 1
TkRead               : 11
TkRepeat             : 7 8 9
TkResta              : 14 35
TkRot                : 31
TkSuma               : 34
TkThen               : 5 6
TkTo                 : 8 9
TkTras               : 32
TkTrue               : 26
TkUsing              : 
TkVerConcat          : 48
TkWhile              : 7
TkWith               : 8
error                : 

Nonterminals, with rules where they appear

arit                 : 13 13 14 15 18 22
booleana             : 5 6 7 19 21 21 22 23 24 25
empty                : 
expbin               : 4 12
expr                 : 1 0
instr                : 1 2 5 5 6 7 8 9
lienzo               : 20 23 29 29 30 31 32
operatorA            : 13
operatorB            : 21 22 23
operatorL            : 29

Parsing method: LALR

state 0

    (0) S' -> . expr
    (1) expr -> . expr TkPuntoYComa instr
    (2) expr -> . instr
    (4) instr -> . TkIdent TkAsignacion expbin
    (5) instr -> . TkIf booleana TkThen instr TkElse instr TkDone
    (6) instr -> . TkIf booleana TkThen instr TkDone
    (7) instr -> . TkWhile booleana TkRepeat instr TkDone
    (8) instr -> . TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
    (9) instr -> . TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
    (10) instr -> . TkPrint TkLienzo
    (11) instr -> . TkRead TkIdent
    (12) instr -> . expbin
    (18) expbin -> . arit
    (19) expbin -> . booleana
    (20) expbin -> . lienzo
    (13) arit -> . arit operatorA arit
    (14) arit -> . TkResta arit
    (15) arit -> . TkParAbre arit TkParCierra
    (16) arit -> . TkNum
    (17) arit -> . TkIdent
    (21) booleana -> . booleana operatorB booleana
    (22) booleana -> . booleana operatorB arit
    (23) booleana -> . booleana operatorB lienzo
    (24) booleana -> . TkParAbre booleana TkParCierra
    (25) booleana -> . booleana TkNegacion
    (26) booleana -> . TkTrue
    (27) booleana -> . TkFalse
    (28) booleana -> . TkIdent
    (29) lienzo -> . lienzo operatorL lienzo
    (30) lienzo -> . TkParAbre lienzo TkParCierra
    (31) lienzo -> . TkRot lienzo
    (32) lienzo -> . lienzo TkTras
    (33) lienzo -> . TkLienzo

    TkIdent         shift and go to state 9
    TkIf            shift and go to state 2
    TkWhile         shift and go to state 10
    TkWith          shift and go to state 6
    TkFrom          shift and go to state 17
    TkPrint         shift and go to state 20
    TkRead          shift and go to state 8
    TkResta         shift and go to state 1
    TkParAbre       shift and go to state 7
    TkNum           shift and go to state 5
    TkTrue          shift and go to state 13
    TkFalse         shift and go to state 4
    TkRot           shift and go to state 15
    TkLienzo        shift and go to state 19

    instr                          shift and go to state 3
    expr                           shift and go to state 16
    lienzo                         shift and go to state 12
    expbin                         shift and go to state 18
    booleana                       shift and go to state 14
    arit                           shift and go to state 11

state 1

    (14) arit -> TkResta . arit
    (13) arit -> . arit operatorA arit
    (14) arit -> . TkResta arit
    (15) arit -> . TkParAbre arit TkParCierra
    (16) arit -> . TkNum
    (17) arit -> . TkIdent

    TkResta         shift and go to state 1
    TkParAbre       shift and go to state 22
    TkNum           shift and go to state 5
    TkIdent         shift and go to state 21

    arit                           shift and go to state 23

state 2

    (5) instr -> TkIf . booleana TkThen instr TkElse instr TkDone
    (6) instr -> TkIf . booleana TkThen instr TkDone
    (21) booleana -> . booleana operatorB booleana
    (22) booleana -> . booleana operatorB arit
    (23) booleana -> . booleana operatorB lienzo
    (24) booleana -> . TkParAbre booleana TkParCierra
    (25) booleana -> . booleana TkNegacion
    (26) booleana -> . TkTrue
    (27) booleana -> . TkFalse
    (28) booleana -> . TkIdent

    TkParAbre       shift and go to state 26
    TkTrue          shift and go to state 13
    TkFalse         shift and go to state 4
    TkIdent         shift and go to state 24

    booleana                       shift and go to state 25

state 3

    (2) expr -> instr .

    TkPuntoYComa    reduce using rule 2 (expr -> instr .)
    $end            reduce using rule 2 (expr -> instr .)


state 4

    (27) booleana -> TkFalse .

    TkParCierra     reduce using rule 27 (booleana -> TkFalse .)
    TkNegacion      reduce using rule 27 (booleana -> TkFalse .)
    TkMenor         reduce using rule 27 (booleana -> TkFalse .)
    TkMenorIgual    reduce using rule 27 (booleana -> TkFalse .)
    TkMayor         reduce using rule 27 (booleana -> TkFalse .)
    TkMayorIgual    reduce using rule 27 (booleana -> TkFalse .)
    TkIgual         reduce using rule 27 (booleana -> TkFalse .)
    TkDesIgual      reduce using rule 27 (booleana -> TkFalse .)
    TkConjuncion    reduce using rule 27 (booleana -> TkFalse .)
    TkDisyuncion    reduce using rule 27 (booleana -> TkFalse .)
    TkElse          reduce using rule 27 (booleana -> TkFalse .)
    TkDone          reduce using rule 27 (booleana -> TkFalse .)
    TkThen          reduce using rule 27 (booleana -> TkFalse .)
    TkRepeat        reduce using rule 27 (booleana -> TkFalse .)
    TkPuntoYComa    reduce using rule 27 (booleana -> TkFalse .)
    $end            reduce using rule 27 (booleana -> TkFalse .)


state 5

    (16) arit -> TkNum .

    TkSuma          reduce using rule 16 (arit -> TkNum .)
    TkResta         reduce using rule 16 (arit -> TkNum .)
    TkMult          reduce using rule 16 (arit -> TkNum .)
    TkDiv           reduce using rule 16 (arit -> TkNum .)
    TkMod           reduce using rule 16 (arit -> TkNum .)
    TkDone          reduce using rule 16 (arit -> TkNum .)
    TkParCierra     reduce using rule 16 (arit -> TkNum .)
    TkPuntoYComa    reduce using rule 16 (arit -> TkNum .)
    $end            reduce using rule 16 (arit -> TkNum .)
    TkElse          reduce using rule 16 (arit -> TkNum .)
    TkNegacion      reduce using rule 16 (arit -> TkNum .)
    TkMenor         reduce using rule 16 (arit -> TkNum .)
    TkMenorIgual    reduce using rule 16 (arit -> TkNum .)
    TkMayor         reduce using rule 16 (arit -> TkNum .)
    TkMayorIgual    reduce using rule 16 (arit -> TkNum .)
    TkIgual         reduce using rule 16 (arit -> TkNum .)
    TkDesIgual      reduce using rule 16 (arit -> TkNum .)
    TkConjuncion    reduce using rule 16 (arit -> TkNum .)
    TkDisyuncion    reduce using rule 16 (arit -> TkNum .)
    TkThen          reduce using rule 16 (arit -> TkNum .)
    TkRepeat        reduce using rule 16 (arit -> TkNum .)


state 6

    (8) instr -> TkWith . TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone

    TkIdent         shift and go to state 27


state 7

    (15) arit -> TkParAbre . arit TkParCierra
    (24) booleana -> TkParAbre . booleana TkParCierra
    (30) lienzo -> TkParAbre . lienzo TkParCierra
    (13) arit -> . arit operatorA arit
    (14) arit -> . TkResta arit
    (15) arit -> . TkParAbre arit TkParCierra
    (16) arit -> . TkNum
    (17) arit -> . TkIdent
    (21) booleana -> . booleana operatorB booleana
    (22) booleana -> . booleana operatorB arit
    (23) booleana -> . booleana operatorB lienzo
    (24) booleana -> . TkParAbre booleana TkParCierra
    (25) booleana -> . booleana TkNegacion
    (26) booleana -> . TkTrue
    (27) booleana -> . TkFalse
    (28) booleana -> . TkIdent
    (29) lienzo -> . lienzo operatorL lienzo
    (30) lienzo -> . TkParAbre lienzo TkParCierra
    (31) lienzo -> . TkRot lienzo
    (32) lienzo -> . lienzo TkTras
    (33) lienzo -> . TkLienzo

    TkResta         shift and go to state 1
    TkParAbre       shift and go to state 7
    TkNum           shift and go to state 5
    TkIdent         shift and go to state 29
    TkTrue          shift and go to state 13
    TkFalse         shift and go to state 4
    TkRot           shift and go to state 15
    TkLienzo        shift and go to state 19

    lienzo                         shift and go to state 28
    arit                           shift and go to state 31
    booleana                       shift and go to state 30

state 8

    (11) instr -> TkRead . TkIdent

    TkIdent         shift and go to state 32


state 9

    (4) instr -> TkIdent . TkAsignacion expbin
    (17) arit -> TkIdent .
    (28) booleana -> TkIdent .

  ! reduce/reduce conflict for TkElse resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkDone resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkPuntoYComa resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for $end resolved using rule 17 (arit -> TkIdent .)
    TkAsignacion    shift and go to state 33
    TkSuma          reduce using rule 17 (arit -> TkIdent .)
    TkResta         reduce using rule 17 (arit -> TkIdent .)
    TkMult          reduce using rule 17 (arit -> TkIdent .)
    TkDiv           reduce using rule 17 (arit -> TkIdent .)
    TkMod           reduce using rule 17 (arit -> TkIdent .)
    TkDone          reduce using rule 17 (arit -> TkIdent .)
    TkPuntoYComa    reduce using rule 17 (arit -> TkIdent .)
    $end            reduce using rule 17 (arit -> TkIdent .)
    TkElse          reduce using rule 17 (arit -> TkIdent .)
    TkNegacion      reduce using rule 28 (booleana -> TkIdent .)
    TkMenor         reduce using rule 28 (booleana -> TkIdent .)
    TkMenorIgual    reduce using rule 28 (booleana -> TkIdent .)
    TkMayor         reduce using rule 28 (booleana -> TkIdent .)
    TkMayorIgual    reduce using rule 28 (booleana -> TkIdent .)
    TkIgual         reduce using rule 28 (booleana -> TkIdent .)
    TkDesIgual      reduce using rule 28 (booleana -> TkIdent .)
    TkConjuncion    reduce using rule 28 (booleana -> TkIdent .)
    TkDisyuncion    reduce using rule 28 (booleana -> TkIdent .)

  ! TkElse          [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkDone          [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkPuntoYComa    [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! $end            [ reduce using rule 28 (booleana -> TkIdent .) ]


state 10

    (7) instr -> TkWhile . booleana TkRepeat instr TkDone
    (21) booleana -> . booleana operatorB booleana
    (22) booleana -> . booleana operatorB arit
    (23) booleana -> . booleana operatorB lienzo
    (24) booleana -> . TkParAbre booleana TkParCierra
    (25) booleana -> . booleana TkNegacion
    (26) booleana -> . TkTrue
    (27) booleana -> . TkFalse
    (28) booleana -> . TkIdent

    TkParAbre       shift and go to state 26
    TkTrue          shift and go to state 13
    TkFalse         shift and go to state 4
    TkIdent         shift and go to state 24

    booleana                       shift and go to state 34

state 11

    (18) expbin -> arit .
    (13) arit -> arit . operatorA arit
    (34) operatorA -> . TkSuma
    (35) operatorA -> . TkResta
    (36) operatorA -> . TkMult
    (37) operatorA -> . TkDiv
    (38) operatorA -> . TkMod

    TkElse          reduce using rule 18 (expbin -> arit .)
    TkDone          reduce using rule 18 (expbin -> arit .)
    TkPuntoYComa    reduce using rule 18 (expbin -> arit .)
    $end            reduce using rule 18 (expbin -> arit .)
    TkSuma          shift and go to state 40
    TkResta         shift and go to state 35
    TkMult          shift and go to state 38
    TkDiv           shift and go to state 37
    TkMod           shift and go to state 36

    operatorA                      shift and go to state 39

state 12

    (20) expbin -> lienzo .
    (29) lienzo -> lienzo . operatorL lienzo
    (32) lienzo -> lienzo . TkTras
    (47) operatorL -> . TkHorConcat
    (48) operatorL -> . TkVerConcat

    TkElse          reduce using rule 20 (expbin -> lienzo .)
    TkDone          reduce using rule 20 (expbin -> lienzo .)
    TkPuntoYComa    reduce using rule 20 (expbin -> lienzo .)
    $end            reduce using rule 20 (expbin -> lienzo .)
    TkTras          shift and go to state 43
    TkHorConcat     shift and go to state 42
    TkVerConcat     shift and go to state 41

    operatorL                      shift and go to state 44

state 13

    (26) booleana -> TkTrue .

    TkParCierra     reduce using rule 26 (booleana -> TkTrue .)
    TkNegacion      reduce using rule 26 (booleana -> TkTrue .)
    TkMenor         reduce using rule 26 (booleana -> TkTrue .)
    TkMenorIgual    reduce using rule 26 (booleana -> TkTrue .)
    TkMayor         reduce using rule 26 (booleana -> TkTrue .)
    TkMayorIgual    reduce using rule 26 (booleana -> TkTrue .)
    TkIgual         reduce using rule 26 (booleana -> TkTrue .)
    TkDesIgual      reduce using rule 26 (booleana -> TkTrue .)
    TkConjuncion    reduce using rule 26 (booleana -> TkTrue .)
    TkDisyuncion    reduce using rule 26 (booleana -> TkTrue .)
    TkElse          reduce using rule 26 (booleana -> TkTrue .)
    TkDone          reduce using rule 26 (booleana -> TkTrue .)
    TkThen          reduce using rule 26 (booleana -> TkTrue .)
    TkRepeat        reduce using rule 26 (booleana -> TkTrue .)
    TkPuntoYComa    reduce using rule 26 (booleana -> TkTrue .)
    $end            reduce using rule 26 (booleana -> TkTrue .)


state 14

    (19) expbin -> booleana .
    (21) booleana -> booleana . operatorB booleana
    (22) booleana -> booleana . operatorB arit
    (23) booleana -> booleana . operatorB lienzo
    (25) booleana -> booleana . TkNegacion
    (39) operatorB -> . TkMenor
    (40) operatorB -> . TkMenorIgual
    (41) operatorB -> . TkMayor
    (42) operatorB -> . TkMayorIgual
    (43) operatorB -> . TkIgual
    (44) operatorB -> . TkDesIgual
    (45) operatorB -> . TkConjuncion
    (46) operatorB -> . TkDisyuncion

    TkElse          reduce using rule 19 (expbin -> booleana .)
    TkDone          reduce using rule 19 (expbin -> booleana .)
    TkPuntoYComa    reduce using rule 19 (expbin -> booleana .)
    $end            reduce using rule 19 (expbin -> booleana .)
    TkNegacion      shift and go to state 46
    TkMenor         shift and go to state 52
    TkMenorIgual    shift and go to state 45
    TkMayor         shift and go to state 49
    TkMayorIgual    shift and go to state 51
    TkIgual         shift and go to state 50
    TkDesIgual      shift and go to state 47
    TkConjuncion    shift and go to state 48
    TkDisyuncion    shift and go to state 54

    operatorB                      shift and go to state 53

state 15

    (31) lienzo -> TkRot . lienzo
    (29) lienzo -> . lienzo operatorL lienzo
    (30) lienzo -> . TkParAbre lienzo TkParCierra
    (31) lienzo -> . TkRot lienzo
    (32) lienzo -> . lienzo TkTras
    (33) lienzo -> . TkLienzo

    TkParAbre       shift and go to state 56
    TkRot           shift and go to state 15
    TkLienzo        shift and go to state 19

    lienzo                         shift and go to state 55

state 16

    (0) S' -> expr .
    (1) expr -> expr . TkPuntoYComa instr

    TkPuntoYComa    shift and go to state 57


state 17

    (9) instr -> TkFrom . TkNum TkTo TkNum TkRepeat instr TkDone

    TkNum           shift and go to state 58


state 18

    (12) instr -> expbin .

    TkDone          reduce using rule 12 (instr -> expbin .)
    TkPuntoYComa    reduce using rule 12 (instr -> expbin .)
    $end            reduce using rule 12 (instr -> expbin .)
    TkElse          reduce using rule 12 (instr -> expbin .)


state 19

    (33) lienzo -> TkLienzo .

    TkTras          reduce using rule 33 (lienzo -> TkLienzo .)
    TkHorConcat     reduce using rule 33 (lienzo -> TkLienzo .)
    TkVerConcat     reduce using rule 33 (lienzo -> TkLienzo .)
    TkNegacion      reduce using rule 33 (lienzo -> TkLienzo .)
    TkMenor         reduce using rule 33 (lienzo -> TkLienzo .)
    TkMenorIgual    reduce using rule 33 (lienzo -> TkLienzo .)
    TkMayor         reduce using rule 33 (lienzo -> TkLienzo .)
    TkMayorIgual    reduce using rule 33 (lienzo -> TkLienzo .)
    TkIgual         reduce using rule 33 (lienzo -> TkLienzo .)
    TkDesIgual      reduce using rule 33 (lienzo -> TkLienzo .)
    TkConjuncion    reduce using rule 33 (lienzo -> TkLienzo .)
    TkDisyuncion    reduce using rule 33 (lienzo -> TkLienzo .)
    TkPuntoYComa    reduce using rule 33 (lienzo -> TkLienzo .)
    $end            reduce using rule 33 (lienzo -> TkLienzo .)
    TkThen          reduce using rule 33 (lienzo -> TkLienzo .)
    TkParCierra     reduce using rule 33 (lienzo -> TkLienzo .)
    TkRepeat        reduce using rule 33 (lienzo -> TkLienzo .)
    TkElse          reduce using rule 33 (lienzo -> TkLienzo .)
    TkDone          reduce using rule 33 (lienzo -> TkLienzo .)


state 20

    (10) instr -> TkPrint . TkLienzo

    TkLienzo        shift and go to state 59


state 21

    (17) arit -> TkIdent .

    TkParCierra     reduce using rule 17 (arit -> TkIdent .)
    TkSuma          reduce using rule 17 (arit -> TkIdent .)
    TkResta         reduce using rule 17 (arit -> TkIdent .)
    TkMult          reduce using rule 17 (arit -> TkIdent .)
    TkDiv           reduce using rule 17 (arit -> TkIdent .)
    TkMod           reduce using rule 17 (arit -> TkIdent .)
    TkPuntoYComa    reduce using rule 17 (arit -> TkIdent .)
    $end            reduce using rule 17 (arit -> TkIdent .)
    TkElse          reduce using rule 17 (arit -> TkIdent .)
    TkDone          reduce using rule 17 (arit -> TkIdent .)
    TkNegacion      reduce using rule 17 (arit -> TkIdent .)
    TkMenor         reduce using rule 17 (arit -> TkIdent .)
    TkMenorIgual    reduce using rule 17 (arit -> TkIdent .)
    TkMayor         reduce using rule 17 (arit -> TkIdent .)
    TkMayorIgual    reduce using rule 17 (arit -> TkIdent .)
    TkIgual         reduce using rule 17 (arit -> TkIdent .)
    TkDesIgual      reduce using rule 17 (arit -> TkIdent .)
    TkConjuncion    reduce using rule 17 (arit -> TkIdent .)
    TkDisyuncion    reduce using rule 17 (arit -> TkIdent .)
    TkThen          reduce using rule 17 (arit -> TkIdent .)
    TkRepeat        reduce using rule 17 (arit -> TkIdent .)


state 22

    (15) arit -> TkParAbre . arit TkParCierra
    (13) arit -> . arit operatorA arit
    (14) arit -> . TkResta arit
    (15) arit -> . TkParAbre arit TkParCierra
    (16) arit -> . TkNum
    (17) arit -> . TkIdent

    TkResta         shift and go to state 1
    TkParAbre       shift and go to state 22
    TkNum           shift and go to state 5
    TkIdent         shift and go to state 21

    arit                           shift and go to state 31

state 23

    (14) arit -> TkResta arit .
    (13) arit -> arit . operatorA arit
    (34) operatorA -> . TkSuma
    (35) operatorA -> . TkResta
    (36) operatorA -> . TkMult
    (37) operatorA -> . TkDiv
    (38) operatorA -> . TkMod

    TkSuma          reduce using rule 14 (arit -> TkResta arit .)
    TkResta         reduce using rule 14 (arit -> TkResta arit .)
    TkDone          reduce using rule 14 (arit -> TkResta arit .)
    TkParCierra     reduce using rule 14 (arit -> TkResta arit .)
    TkPuntoYComa    reduce using rule 14 (arit -> TkResta arit .)
    $end            reduce using rule 14 (arit -> TkResta arit .)
    TkElse          reduce using rule 14 (arit -> TkResta arit .)
    TkNegacion      reduce using rule 14 (arit -> TkResta arit .)
    TkMenor         reduce using rule 14 (arit -> TkResta arit .)
    TkMenorIgual    reduce using rule 14 (arit -> TkResta arit .)
    TkMayor         reduce using rule 14 (arit -> TkResta arit .)
    TkMayorIgual    reduce using rule 14 (arit -> TkResta arit .)
    TkIgual         reduce using rule 14 (arit -> TkResta arit .)
    TkDesIgual      reduce using rule 14 (arit -> TkResta arit .)
    TkConjuncion    reduce using rule 14 (arit -> TkResta arit .)
    TkDisyuncion    reduce using rule 14 (arit -> TkResta arit .)
    TkThen          reduce using rule 14 (arit -> TkResta arit .)
    TkRepeat        reduce using rule 14 (arit -> TkResta arit .)
    TkMult          shift and go to state 38
    TkDiv           shift and go to state 37
    TkMod           shift and go to state 36

  ! TkMult          [ reduce using rule 14 (arit -> TkResta arit .) ]
  ! TkDiv           [ reduce using rule 14 (arit -> TkResta arit .) ]
  ! TkMod           [ reduce using rule 14 (arit -> TkResta arit .) ]
  ! TkSuma          [ shift and go to state 40 ]
  ! TkResta         [ shift and go to state 35 ]

    operatorA                      shift and go to state 39

state 24

    (28) booleana -> TkIdent .

    TkParCierra     reduce using rule 28 (booleana -> TkIdent .)
    TkNegacion      reduce using rule 28 (booleana -> TkIdent .)
    TkMenor         reduce using rule 28 (booleana -> TkIdent .)
    TkMenorIgual    reduce using rule 28 (booleana -> TkIdent .)
    TkMayor         reduce using rule 28 (booleana -> TkIdent .)
    TkMayorIgual    reduce using rule 28 (booleana -> TkIdent .)
    TkIgual         reduce using rule 28 (booleana -> TkIdent .)
    TkDesIgual      reduce using rule 28 (booleana -> TkIdent .)
    TkConjuncion    reduce using rule 28 (booleana -> TkIdent .)
    TkDisyuncion    reduce using rule 28 (booleana -> TkIdent .)
    TkThen          reduce using rule 28 (booleana -> TkIdent .)
    TkRepeat        reduce using rule 28 (booleana -> TkIdent .)


state 25

    (5) instr -> TkIf booleana . TkThen instr TkElse instr TkDone
    (6) instr -> TkIf booleana . TkThen instr TkDone
    (21) booleana -> booleana . operatorB booleana
    (22) booleana -> booleana . operatorB arit
    (23) booleana -> booleana . operatorB lienzo
    (25) booleana -> booleana . TkNegacion
    (39) operatorB -> . TkMenor
    (40) operatorB -> . TkMenorIgual
    (41) operatorB -> . TkMayor
    (42) operatorB -> . TkMayorIgual
    (43) operatorB -> . TkIgual
    (44) operatorB -> . TkDesIgual
    (45) operatorB -> . TkConjuncion
    (46) operatorB -> . TkDisyuncion

    TkThen          shift and go to state 60
    TkNegacion      shift and go to state 46
    TkMenor         shift and go to state 52
    TkMenorIgual    shift and go to state 45
    TkMayor         shift and go to state 49
    TkMayorIgual    shift and go to state 51
    TkIgual         shift and go to state 50
    TkDesIgual      shift and go to state 47
    TkConjuncion    shift and go to state 48
    TkDisyuncion    shift and go to state 54

    operatorB                      shift and go to state 53

state 26

    (24) booleana -> TkParAbre . booleana TkParCierra
    (21) booleana -> . booleana operatorB booleana
    (22) booleana -> . booleana operatorB arit
    (23) booleana -> . booleana operatorB lienzo
    (24) booleana -> . TkParAbre booleana TkParCierra
    (25) booleana -> . booleana TkNegacion
    (26) booleana -> . TkTrue
    (27) booleana -> . TkFalse
    (28) booleana -> . TkIdent

    TkParAbre       shift and go to state 26
    TkTrue          shift and go to state 13
    TkFalse         shift and go to state 4
    TkIdent         shift and go to state 24

    booleana                       shift and go to state 30

state 27

    (8) instr -> TkWith TkIdent . TkFrom TkNum TkTo TkNum TkRepeat instr TkDone

    TkFrom          shift and go to state 61


state 28

    (30) lienzo -> TkParAbre lienzo . TkParCierra
    (29) lienzo -> lienzo . operatorL lienzo
    (32) lienzo -> lienzo . TkTras
    (47) operatorL -> . TkHorConcat
    (48) operatorL -> . TkVerConcat

    TkParCierra     shift and go to state 62
    TkTras          shift and go to state 43
    TkHorConcat     shift and go to state 42
    TkVerConcat     shift and go to state 41

    operatorL                      shift and go to state 44

state 29

    (17) arit -> TkIdent .
    (28) booleana -> TkIdent .

  ! reduce/reduce conflict for TkParCierra resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkPuntoYComa resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for $end resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkElse resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkDone resolved using rule 17 (arit -> TkIdent .)
    TkParCierra     reduce using rule 17 (arit -> TkIdent .)
    TkSuma          reduce using rule 17 (arit -> TkIdent .)
    TkResta         reduce using rule 17 (arit -> TkIdent .)
    TkMult          reduce using rule 17 (arit -> TkIdent .)
    TkDiv           reduce using rule 17 (arit -> TkIdent .)
    TkMod           reduce using rule 17 (arit -> TkIdent .)
    TkPuntoYComa    reduce using rule 17 (arit -> TkIdent .)
    $end            reduce using rule 17 (arit -> TkIdent .)
    TkElse          reduce using rule 17 (arit -> TkIdent .)
    TkDone          reduce using rule 17 (arit -> TkIdent .)
    TkNegacion      reduce using rule 28 (booleana -> TkIdent .)
    TkMenor         reduce using rule 28 (booleana -> TkIdent .)
    TkMenorIgual    reduce using rule 28 (booleana -> TkIdent .)
    TkMayor         reduce using rule 28 (booleana -> TkIdent .)
    TkMayorIgual    reduce using rule 28 (booleana -> TkIdent .)
    TkIgual         reduce using rule 28 (booleana -> TkIdent .)
    TkDesIgual      reduce using rule 28 (booleana -> TkIdent .)
    TkConjuncion    reduce using rule 28 (booleana -> TkIdent .)
    TkDisyuncion    reduce using rule 28 (booleana -> TkIdent .)

  ! TkParCierra     [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkPuntoYComa    [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! $end            [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkElse          [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkDone          [ reduce using rule 28 (booleana -> TkIdent .) ]


state 30

    (24) booleana -> TkParAbre booleana . TkParCierra
    (21) booleana -> booleana . operatorB booleana
    (22) booleana -> booleana . operatorB arit
    (23) booleana -> booleana . operatorB lienzo
    (25) booleana -> booleana . TkNegacion
    (39) operatorB -> . TkMenor
    (40) operatorB -> . TkMenorIgual
    (41) operatorB -> . TkMayor
    (42) operatorB -> . TkMayorIgual
    (43) operatorB -> . TkIgual
    (44) operatorB -> . TkDesIgual
    (45) operatorB -> . TkConjuncion
    (46) operatorB -> . TkDisyuncion

    TkParCierra     shift and go to state 63
    TkNegacion      shift and go to state 46
    TkMenor         shift and go to state 52
    TkMenorIgual    shift and go to state 45
    TkMayor         shift and go to state 49
    TkMayorIgual    shift and go to state 51
    TkIgual         shift and go to state 50
    TkDesIgual      shift and go to state 47
    TkConjuncion    shift and go to state 48
    TkDisyuncion    shift and go to state 54

    operatorB                      shift and go to state 53

state 31

    (15) arit -> TkParAbre arit . TkParCierra
    (13) arit -> arit . operatorA arit
    (34) operatorA -> . TkSuma
    (35) operatorA -> . TkResta
    (36) operatorA -> . TkMult
    (37) operatorA -> . TkDiv
    (38) operatorA -> . TkMod

    TkParCierra     shift and go to state 64
    TkSuma          shift and go to state 40
    TkResta         shift and go to state 35
    TkMult          shift and go to state 38
    TkDiv           shift and go to state 37
    TkMod           shift and go to state 36

    operatorA                      shift and go to state 39

state 32

    (11) instr -> TkRead TkIdent .

    TkDone          reduce using rule 11 (instr -> TkRead TkIdent .)
    TkPuntoYComa    reduce using rule 11 (instr -> TkRead TkIdent .)
    $end            reduce using rule 11 (instr -> TkRead TkIdent .)
    TkElse          reduce using rule 11 (instr -> TkRead TkIdent .)


state 33

    (4) instr -> TkIdent TkAsignacion . expbin
    (18) expbin -> . arit
    (19) expbin -> . booleana
    (20) expbin -> . lienzo
    (13) arit -> . arit operatorA arit
    (14) arit -> . TkResta arit
    (15) arit -> . TkParAbre arit TkParCierra
    (16) arit -> . TkNum
    (17) arit -> . TkIdent
    (21) booleana -> . booleana operatorB booleana
    (22) booleana -> . booleana operatorB arit
    (23) booleana -> . booleana operatorB lienzo
    (24) booleana -> . TkParAbre booleana TkParCierra
    (25) booleana -> . booleana TkNegacion
    (26) booleana -> . TkTrue
    (27) booleana -> . TkFalse
    (28) booleana -> . TkIdent
    (29) lienzo -> . lienzo operatorL lienzo
    (30) lienzo -> . TkParAbre lienzo TkParCierra
    (31) lienzo -> . TkRot lienzo
    (32) lienzo -> . lienzo TkTras
    (33) lienzo -> . TkLienzo

    TkResta         shift and go to state 1
    TkParAbre       shift and go to state 7
    TkNum           shift and go to state 5
    TkIdent         shift and go to state 29
    TkTrue          shift and go to state 13
    TkFalse         shift and go to state 4
    TkRot           shift and go to state 15
    TkLienzo        shift and go to state 19

    lienzo                         shift and go to state 12
    expbin                         shift and go to state 65
    booleana                       shift and go to state 14
    arit                           shift and go to state 11

state 34

    (7) instr -> TkWhile booleana . TkRepeat instr TkDone
    (21) booleana -> booleana . operatorB booleana
    (22) booleana -> booleana . operatorB arit
    (23) booleana -> booleana . operatorB lienzo
    (25) booleana -> booleana . TkNegacion
    (39) operatorB -> . TkMenor
    (40) operatorB -> . TkMenorIgual
    (41) operatorB -> . TkMayor
    (42) operatorB -> . TkMayorIgual
    (43) operatorB -> . TkIgual
    (44) operatorB -> . TkDesIgual
    (45) operatorB -> . TkConjuncion
    (46) operatorB -> . TkDisyuncion

    TkRepeat        shift and go to state 66
    TkNegacion      shift and go to state 46
    TkMenor         shift and go to state 52
    TkMenorIgual    shift and go to state 45
    TkMayor         shift and go to state 49
    TkMayorIgual    shift and go to state 51
    TkIgual         shift and go to state 50
    TkDesIgual      shift and go to state 47
    TkConjuncion    shift and go to state 48
    TkDisyuncion    shift and go to state 54

    operatorB                      shift and go to state 53

state 35

    (35) operatorA -> TkResta .

    TkResta         reduce using rule 35 (operatorA -> TkResta .)
    TkParAbre       reduce using rule 35 (operatorA -> TkResta .)
    TkNum           reduce using rule 35 (operatorA -> TkResta .)
    TkIdent         reduce using rule 35 (operatorA -> TkResta .)


state 36

    (38) operatorA -> TkMod .

    TkResta         reduce using rule 38 (operatorA -> TkMod .)
    TkParAbre       reduce using rule 38 (operatorA -> TkMod .)
    TkNum           reduce using rule 38 (operatorA -> TkMod .)
    TkIdent         reduce using rule 38 (operatorA -> TkMod .)


state 37

    (37) operatorA -> TkDiv .

    TkResta         reduce using rule 37 (operatorA -> TkDiv .)
    TkParAbre       reduce using rule 37 (operatorA -> TkDiv .)
    TkNum           reduce using rule 37 (operatorA -> TkDiv .)
    TkIdent         reduce using rule 37 (operatorA -> TkDiv .)


state 38

    (36) operatorA -> TkMult .

    TkResta         reduce using rule 36 (operatorA -> TkMult .)
    TkParAbre       reduce using rule 36 (operatorA -> TkMult .)
    TkNum           reduce using rule 36 (operatorA -> TkMult .)
    TkIdent         reduce using rule 36 (operatorA -> TkMult .)


state 39

    (13) arit -> arit operatorA . arit
    (13) arit -> . arit operatorA arit
    (14) arit -> . TkResta arit
    (15) arit -> . TkParAbre arit TkParCierra
    (16) arit -> . TkNum
    (17) arit -> . TkIdent

    TkResta         shift and go to state 1
    TkParAbre       shift and go to state 22
    TkNum           shift and go to state 5
    TkIdent         shift and go to state 21

    arit                           shift and go to state 67

state 40

    (34) operatorA -> TkSuma .

    TkResta         reduce using rule 34 (operatorA -> TkSuma .)
    TkParAbre       reduce using rule 34 (operatorA -> TkSuma .)
    TkNum           reduce using rule 34 (operatorA -> TkSuma .)
    TkIdent         reduce using rule 34 (operatorA -> TkSuma .)


state 41

    (48) operatorL -> TkVerConcat .

    TkParAbre       reduce using rule 48 (operatorL -> TkVerConcat .)
    TkRot           reduce using rule 48 (operatorL -> TkVerConcat .)
    TkLienzo        reduce using rule 48 (operatorL -> TkVerConcat .)


state 42

    (47) operatorL -> TkHorConcat .

    TkParAbre       reduce using rule 47 (operatorL -> TkHorConcat .)
    TkRot           reduce using rule 47 (operatorL -> TkHorConcat .)
    TkLienzo        reduce using rule 47 (operatorL -> TkHorConcat .)


state 43

    (32) lienzo -> lienzo TkTras .

    TkTras          reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkHorConcat     reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkVerConcat     reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkNegacion      reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkMenor         reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkMenorIgual    reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkMayor         reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkMayorIgual    reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkIgual         reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkDesIgual      reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkConjuncion    reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkDisyuncion    reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkPuntoYComa    reduce using rule 32 (lienzo -> lienzo TkTras .)
    $end            reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkThen          reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkParCierra     reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkRepeat        reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkElse          reduce using rule 32 (lienzo -> lienzo TkTras .)
    TkDone          reduce using rule 32 (lienzo -> lienzo TkTras .)


state 44

    (29) lienzo -> lienzo operatorL . lienzo
    (29) lienzo -> . lienzo operatorL lienzo
    (30) lienzo -> . TkParAbre lienzo TkParCierra
    (31) lienzo -> . TkRot lienzo
    (32) lienzo -> . lienzo TkTras
    (33) lienzo -> . TkLienzo

    TkParAbre       shift and go to state 56
    TkRot           shift and go to state 15
    TkLienzo        shift and go to state 19

    lienzo                         shift and go to state 68

state 45

    (40) operatorB -> TkMenorIgual .

    TkParAbre       reduce using rule 40 (operatorB -> TkMenorIgual .)
    TkTrue          reduce using rule 40 (operatorB -> TkMenorIgual .)
    TkFalse         reduce using rule 40 (operatorB -> TkMenorIgual .)
    TkIdent         reduce using rule 40 (operatorB -> TkMenorIgual .)
    TkResta         reduce using rule 40 (operatorB -> TkMenorIgual .)
    TkNum           reduce using rule 40 (operatorB -> TkMenorIgual .)
    TkRot           reduce using rule 40 (operatorB -> TkMenorIgual .)
    TkLienzo        reduce using rule 40 (operatorB -> TkMenorIgual .)


state 46

    (25) booleana -> booleana TkNegacion .

    TkParCierra     reduce using rule 25 (booleana -> booleana TkNegacion .)
    TkNegacion      reduce using rule 25 (booleana -> booleana TkNegacion .)
    TkMenor         reduce using rule 25 (booleana -> booleana TkNegacion .)
    TkMenorIgual    reduce using rule 25 (booleana -> booleana TkNegacion .)
    TkMayor         reduce using rule 25 (booleana -> booleana TkNegacion .)
    TkMayorIgual    reduce using rule 25 (booleana -> booleana TkNegacion .)
    TkIgual         reduce using rule 25 (booleana -> booleana TkNegacion .)
    TkDesIgual      reduce using rule 25 (booleana -> booleana TkNegacion .)
    TkConjuncion    reduce using rule 25 (booleana -> booleana TkNegacion .)
    TkDisyuncion    reduce using rule 25 (booleana -> booleana TkNegacion .)
    TkElse          reduce using rule 25 (booleana -> booleana TkNegacion .)
    TkDone          reduce using rule 25 (booleana -> booleana TkNegacion .)
    TkThen          reduce using rule 25 (booleana -> booleana TkNegacion .)
    TkRepeat        reduce using rule 25 (booleana -> booleana TkNegacion .)
    TkPuntoYComa    reduce using rule 25 (booleana -> booleana TkNegacion .)
    $end            reduce using rule 25 (booleana -> booleana TkNegacion .)


state 47

    (44) operatorB -> TkDesIgual .

    TkParAbre       reduce using rule 44 (operatorB -> TkDesIgual .)
    TkTrue          reduce using rule 44 (operatorB -> TkDesIgual .)
    TkFalse         reduce using rule 44 (operatorB -> TkDesIgual .)
    TkIdent         reduce using rule 44 (operatorB -> TkDesIgual .)
    TkResta         reduce using rule 44 (operatorB -> TkDesIgual .)
    TkNum           reduce using rule 44 (operatorB -> TkDesIgual .)
    TkRot           reduce using rule 44 (operatorB -> TkDesIgual .)
    TkLienzo        reduce using rule 44 (operatorB -> TkDesIgual .)


state 48

    (45) operatorB -> TkConjuncion .

    TkParAbre       reduce using rule 45 (operatorB -> TkConjuncion .)
    TkTrue          reduce using rule 45 (operatorB -> TkConjuncion .)
    TkFalse         reduce using rule 45 (operatorB -> TkConjuncion .)
    TkIdent         reduce using rule 45 (operatorB -> TkConjuncion .)
    TkResta         reduce using rule 45 (operatorB -> TkConjuncion .)
    TkNum           reduce using rule 45 (operatorB -> TkConjuncion .)
    TkRot           reduce using rule 45 (operatorB -> TkConjuncion .)
    TkLienzo        reduce using rule 45 (operatorB -> TkConjuncion .)


state 49

    (41) operatorB -> TkMayor .

    TkParAbre       reduce using rule 41 (operatorB -> TkMayor .)
    TkTrue          reduce using rule 41 (operatorB -> TkMayor .)
    TkFalse         reduce using rule 41 (operatorB -> TkMayor .)
    TkIdent         reduce using rule 41 (operatorB -> TkMayor .)
    TkResta         reduce using rule 41 (operatorB -> TkMayor .)
    TkNum           reduce using rule 41 (operatorB -> TkMayor .)
    TkRot           reduce using rule 41 (operatorB -> TkMayor .)
    TkLienzo        reduce using rule 41 (operatorB -> TkMayor .)


state 50

    (43) operatorB -> TkIgual .

    TkParAbre       reduce using rule 43 (operatorB -> TkIgual .)
    TkTrue          reduce using rule 43 (operatorB -> TkIgual .)
    TkFalse         reduce using rule 43 (operatorB -> TkIgual .)
    TkIdent         reduce using rule 43 (operatorB -> TkIgual .)
    TkResta         reduce using rule 43 (operatorB -> TkIgual .)
    TkNum           reduce using rule 43 (operatorB -> TkIgual .)
    TkRot           reduce using rule 43 (operatorB -> TkIgual .)
    TkLienzo        reduce using rule 43 (operatorB -> TkIgual .)


state 51

    (42) operatorB -> TkMayorIgual .

    TkParAbre       reduce using rule 42 (operatorB -> TkMayorIgual .)
    TkTrue          reduce using rule 42 (operatorB -> TkMayorIgual .)
    TkFalse         reduce using rule 42 (operatorB -> TkMayorIgual .)
    TkIdent         reduce using rule 42 (operatorB -> TkMayorIgual .)
    TkResta         reduce using rule 42 (operatorB -> TkMayorIgual .)
    TkNum           reduce using rule 42 (operatorB -> TkMayorIgual .)
    TkRot           reduce using rule 42 (operatorB -> TkMayorIgual .)
    TkLienzo        reduce using rule 42 (operatorB -> TkMayorIgual .)


state 52

    (39) operatorB -> TkMenor .

    TkParAbre       reduce using rule 39 (operatorB -> TkMenor .)
    TkTrue          reduce using rule 39 (operatorB -> TkMenor .)
    TkFalse         reduce using rule 39 (operatorB -> TkMenor .)
    TkIdent         reduce using rule 39 (operatorB -> TkMenor .)
    TkResta         reduce using rule 39 (operatorB -> TkMenor .)
    TkNum           reduce using rule 39 (operatorB -> TkMenor .)
    TkRot           reduce using rule 39 (operatorB -> TkMenor .)
    TkLienzo        reduce using rule 39 (operatorB -> TkMenor .)


state 53

    (21) booleana -> booleana operatorB . booleana
    (22) booleana -> booleana operatorB . arit
    (23) booleana -> booleana operatorB . lienzo
    (21) booleana -> . booleana operatorB booleana
    (22) booleana -> . booleana operatorB arit
    (23) booleana -> . booleana operatorB lienzo
    (24) booleana -> . TkParAbre booleana TkParCierra
    (25) booleana -> . booleana TkNegacion
    (26) booleana -> . TkTrue
    (27) booleana -> . TkFalse
    (28) booleana -> . TkIdent
    (13) arit -> . arit operatorA arit
    (14) arit -> . TkResta arit
    (15) arit -> . TkParAbre arit TkParCierra
    (16) arit -> . TkNum
    (17) arit -> . TkIdent
    (29) lienzo -> . lienzo operatorL lienzo
    (30) lienzo -> . TkParAbre lienzo TkParCierra
    (31) lienzo -> . TkRot lienzo
    (32) lienzo -> . lienzo TkTras
    (33) lienzo -> . TkLienzo

    TkParAbre       shift and go to state 72
    TkTrue          shift and go to state 13
    TkFalse         shift and go to state 4
    TkIdent         shift and go to state 70
    TkResta         shift and go to state 1
    TkNum           shift and go to state 5
    TkRot           shift and go to state 15
    TkLienzo        shift and go to state 19

    lienzo                         shift and go to state 69
    arit                           shift and go to state 73
    booleana                       shift and go to state 71

state 54

    (46) operatorB -> TkDisyuncion .

    TkParAbre       reduce using rule 46 (operatorB -> TkDisyuncion .)
    TkTrue          reduce using rule 46 (operatorB -> TkDisyuncion .)
    TkFalse         reduce using rule 46 (operatorB -> TkDisyuncion .)
    TkIdent         reduce using rule 46 (operatorB -> TkDisyuncion .)
    TkResta         reduce using rule 46 (operatorB -> TkDisyuncion .)
    TkNum           reduce using rule 46 (operatorB -> TkDisyuncion .)
    TkRot           reduce using rule 46 (operatorB -> TkDisyuncion .)
    TkLienzo        reduce using rule 46 (operatorB -> TkDisyuncion .)


state 55

    (31) lienzo -> TkRot lienzo .
    (29) lienzo -> lienzo . operatorL lienzo
    (32) lienzo -> lienzo . TkTras
    (47) operatorL -> . TkHorConcat
    (48) operatorL -> . TkVerConcat

    TkHorConcat     reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkVerConcat     reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkNegacion      reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkMenor         reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkMenorIgual    reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkMayor         reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkMayorIgual    reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkIgual         reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkDesIgual      reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkConjuncion    reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkDisyuncion    reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkPuntoYComa    reduce using rule 31 (lienzo -> TkRot lienzo .)
    $end            reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkThen          reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkParCierra     reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkRepeat        reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkElse          reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkDone          reduce using rule 31 (lienzo -> TkRot lienzo .)
    TkTras          shift and go to state 43

  ! TkTras          [ reduce using rule 31 (lienzo -> TkRot lienzo .) ]
  ! TkHorConcat     [ shift and go to state 42 ]
  ! TkVerConcat     [ shift and go to state 41 ]

    operatorL                      shift and go to state 44

state 56

    (30) lienzo -> TkParAbre . lienzo TkParCierra
    (29) lienzo -> . lienzo operatorL lienzo
    (30) lienzo -> . TkParAbre lienzo TkParCierra
    (31) lienzo -> . TkRot lienzo
    (32) lienzo -> . lienzo TkTras
    (33) lienzo -> . TkLienzo

    TkParAbre       shift and go to state 56
    TkRot           shift and go to state 15
    TkLienzo        shift and go to state 19

    lienzo                         shift and go to state 28

state 57

    (1) expr -> expr TkPuntoYComa . instr
    (4) instr -> . TkIdent TkAsignacion expbin
    (5) instr -> . TkIf booleana TkThen instr TkElse instr TkDone
    (6) instr -> . TkIf booleana TkThen instr TkDone
    (7) instr -> . TkWhile booleana TkRepeat instr TkDone
    (8) instr -> . TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
    (9) instr -> . TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
    (10) instr -> . TkPrint TkLienzo
    (11) instr -> . TkRead TkIdent
    (12) instr -> . expbin
    (18) expbin -> . arit
    (19) expbin -> . booleana
    (20) expbin -> . lienzo
    (13) arit -> . arit operatorA arit
    (14) arit -> . TkResta arit
    (15) arit -> . TkParAbre arit TkParCierra
    (16) arit -> . TkNum
    (17) arit -> . TkIdent
    (21) booleana -> . booleana operatorB booleana
    (22) booleana -> . booleana operatorB arit
    (23) booleana -> . booleana operatorB lienzo
    (24) booleana -> . TkParAbre booleana TkParCierra
    (25) booleana -> . booleana TkNegacion
    (26) booleana -> . TkTrue
    (27) booleana -> . TkFalse
    (28) booleana -> . TkIdent
    (29) lienzo -> . lienzo operatorL lienzo
    (30) lienzo -> . TkParAbre lienzo TkParCierra
    (31) lienzo -> . TkRot lienzo
    (32) lienzo -> . lienzo TkTras
    (33) lienzo -> . TkLienzo

    TkIdent         shift and go to state 9
    TkIf            shift and go to state 2
    TkWhile         shift and go to state 10
    TkWith          shift and go to state 6
    TkFrom          shift and go to state 17
    TkPrint         shift and go to state 20
    TkRead          shift and go to state 8
    TkResta         shift and go to state 1
    TkParAbre       shift and go to state 7
    TkNum           shift and go to state 5
    TkTrue          shift and go to state 13
    TkFalse         shift and go to state 4
    TkRot           shift and go to state 15
    TkLienzo        shift and go to state 19

    instr                          shift and go to state 74
    lienzo                         shift and go to state 12
    expbin                         shift and go to state 18
    booleana                       shift and go to state 14
    arit                           shift and go to state 11

state 58

    (9) instr -> TkFrom TkNum . TkTo TkNum TkRepeat instr TkDone

    TkTo            shift and go to state 75


state 59

    (10) instr -> TkPrint TkLienzo .

    TkDone          reduce using rule 10 (instr -> TkPrint TkLienzo .)
    TkPuntoYComa    reduce using rule 10 (instr -> TkPrint TkLienzo .)
    $end            reduce using rule 10 (instr -> TkPrint TkLienzo .)
    TkElse          reduce using rule 10 (instr -> TkPrint TkLienzo .)


state 60

    (5) instr -> TkIf booleana TkThen . instr TkElse instr TkDone
    (6) instr -> TkIf booleana TkThen . instr TkDone
    (4) instr -> . TkIdent TkAsignacion expbin
    (5) instr -> . TkIf booleana TkThen instr TkElse instr TkDone
    (6) instr -> . TkIf booleana TkThen instr TkDone
    (7) instr -> . TkWhile booleana TkRepeat instr TkDone
    (8) instr -> . TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
    (9) instr -> . TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
    (10) instr -> . TkPrint TkLienzo
    (11) instr -> . TkRead TkIdent
    (12) instr -> . expbin
    (18) expbin -> . arit
    (19) expbin -> . booleana
    (20) expbin -> . lienzo
    (13) arit -> . arit operatorA arit
    (14) arit -> . TkResta arit
    (15) arit -> . TkParAbre arit TkParCierra
    (16) arit -> . TkNum
    (17) arit -> . TkIdent
    (21) booleana -> . booleana operatorB booleana
    (22) booleana -> . booleana operatorB arit
    (23) booleana -> . booleana operatorB lienzo
    (24) booleana -> . TkParAbre booleana TkParCierra
    (25) booleana -> . booleana TkNegacion
    (26) booleana -> . TkTrue
    (27) booleana -> . TkFalse
    (28) booleana -> . TkIdent
    (29) lienzo -> . lienzo operatorL lienzo
    (30) lienzo -> . TkParAbre lienzo TkParCierra
    (31) lienzo -> . TkRot lienzo
    (32) lienzo -> . lienzo TkTras
    (33) lienzo -> . TkLienzo

    TkIdent         shift and go to state 9
    TkIf            shift and go to state 2
    TkWhile         shift and go to state 10
    TkWith          shift and go to state 6
    TkFrom          shift and go to state 17
    TkPrint         shift and go to state 20
    TkRead          shift and go to state 8
    TkResta         shift and go to state 1
    TkParAbre       shift and go to state 7
    TkNum           shift and go to state 5
    TkTrue          shift and go to state 13
    TkFalse         shift and go to state 4
    TkRot           shift and go to state 15
    TkLienzo        shift and go to state 19

    instr                          shift and go to state 76
    lienzo                         shift and go to state 12
    expbin                         shift and go to state 18
    booleana                       shift and go to state 14
    arit                           shift and go to state 11

state 61

    (8) instr -> TkWith TkIdent TkFrom . TkNum TkTo TkNum TkRepeat instr TkDone

    TkNum           shift and go to state 77


state 62

    (30) lienzo -> TkParAbre lienzo TkParCierra .

    TkTras          reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkHorConcat     reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkVerConcat     reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkNegacion      reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkMenor         reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkMenorIgual    reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkMayor         reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkMayorIgual    reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkIgual         reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkDesIgual      reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkConjuncion    reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkDisyuncion    reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkPuntoYComa    reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    $end            reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkThen          reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkParCierra     reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkRepeat        reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkElse          reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)
    TkDone          reduce using rule 30 (lienzo -> TkParAbre lienzo TkParCierra .)


state 63

    (24) booleana -> TkParAbre booleana TkParCierra .

    TkParCierra     reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    TkNegacion      reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    TkMenor         reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    TkMenorIgual    reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    TkMayor         reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    TkMayorIgual    reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    TkIgual         reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    TkDesIgual      reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    TkConjuncion    reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    TkDisyuncion    reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    TkElse          reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    TkDone          reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    TkThen          reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    TkRepeat        reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    TkPuntoYComa    reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)
    $end            reduce using rule 24 (booleana -> TkParAbre booleana TkParCierra .)


state 64

    (15) arit -> TkParAbre arit TkParCierra .

    TkSuma          reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkResta         reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkMult          reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkDiv           reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkMod           reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkDone          reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkParCierra     reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkPuntoYComa    reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    $end            reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkElse          reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkNegacion      reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkMenor         reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkMenorIgual    reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkMayor         reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkMayorIgual    reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkIgual         reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkDesIgual      reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkConjuncion    reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkDisyuncion    reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkThen          reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)
    TkRepeat        reduce using rule 15 (arit -> TkParAbre arit TkParCierra .)


state 65

    (4) instr -> TkIdent TkAsignacion expbin .

    TkDone          reduce using rule 4 (instr -> TkIdent TkAsignacion expbin .)
    TkPuntoYComa    reduce using rule 4 (instr -> TkIdent TkAsignacion expbin .)
    $end            reduce using rule 4 (instr -> TkIdent TkAsignacion expbin .)
    TkElse          reduce using rule 4 (instr -> TkIdent TkAsignacion expbin .)


state 66

    (7) instr -> TkWhile booleana TkRepeat . instr TkDone
    (4) instr -> . TkIdent TkAsignacion expbin
    (5) instr -> . TkIf booleana TkThen instr TkElse instr TkDone
    (6) instr -> . TkIf booleana TkThen instr TkDone
    (7) instr -> . TkWhile booleana TkRepeat instr TkDone
    (8) instr -> . TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
    (9) instr -> . TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
    (10) instr -> . TkPrint TkLienzo
    (11) instr -> . TkRead TkIdent
    (12) instr -> . expbin
    (18) expbin -> . arit
    (19) expbin -> . booleana
    (20) expbin -> . lienzo
    (13) arit -> . arit operatorA arit
    (14) arit -> . TkResta arit
    (15) arit -> . TkParAbre arit TkParCierra
    (16) arit -> . TkNum
    (17) arit -> . TkIdent
    (21) booleana -> . booleana operatorB booleana
    (22) booleana -> . booleana operatorB arit
    (23) booleana -> . booleana operatorB lienzo
    (24) booleana -> . TkParAbre booleana TkParCierra
    (25) booleana -> . booleana TkNegacion
    (26) booleana -> . TkTrue
    (27) booleana -> . TkFalse
    (28) booleana -> . TkIdent
    (29) lienzo -> . lienzo operatorL lienzo
    (30) lienzo -> . TkParAbre lienzo TkParCierra
    (31) lienzo -> . TkRot lienzo
    (32) lienzo -> . lienzo TkTras
    (33) lienzo -> . TkLienzo

    TkIdent         shift and go to state 9
    TkIf            shift and go to state 2
    TkWhile         shift and go to state 10
    TkWith          shift and go to state 6
    TkFrom          shift and go to state 17
    TkPrint         shift and go to state 20
    TkRead          shift and go to state 8
    TkResta         shift and go to state 1
    TkParAbre       shift and go to state 7
    TkNum           shift and go to state 5
    TkTrue          shift and go to state 13
    TkFalse         shift and go to state 4
    TkRot           shift and go to state 15
    TkLienzo        shift and go to state 19

    instr                          shift and go to state 78
    lienzo                         shift and go to state 12
    expbin                         shift and go to state 18
    booleana                       shift and go to state 14
    arit                           shift and go to state 11

state 67

    (13) arit -> arit operatorA arit .
    (13) arit -> arit . operatorA arit
    (34) operatorA -> . TkSuma
    (35) operatorA -> . TkResta
    (36) operatorA -> . TkMult
    (37) operatorA -> . TkDiv
    (38) operatorA -> . TkMod

  ! shift/reduce conflict for TkSuma resolved as shift
  ! shift/reduce conflict for TkResta resolved as shift
  ! shift/reduce conflict for TkMult resolved as shift
  ! shift/reduce conflict for TkDiv resolved as shift
  ! shift/reduce conflict for TkMod resolved as shift
    TkDone          reduce using rule 13 (arit -> arit operatorA arit .)
    TkParCierra     reduce using rule 13 (arit -> arit operatorA arit .)
    TkPuntoYComa    reduce using rule 13 (arit -> arit operatorA arit .)
    $end            reduce using rule 13 (arit -> arit operatorA arit .)
    TkElse          reduce using rule 13 (arit -> arit operatorA arit .)
    TkNegacion      reduce using rule 13 (arit -> arit operatorA arit .)
    TkMenor         reduce using rule 13 (arit -> arit operatorA arit .)
    TkMenorIgual    reduce using rule 13 (arit -> arit operatorA arit .)
    TkMayor         reduce using rule 13 (arit -> arit operatorA arit .)
    TkMayorIgual    reduce using rule 13 (arit -> arit operatorA arit .)
    TkIgual         reduce using rule 13 (arit -> arit operatorA arit .)
    TkDesIgual      reduce using rule 13 (arit -> arit operatorA arit .)
    TkConjuncion    reduce using rule 13 (arit -> arit operatorA arit .)
    TkDisyuncion    reduce using rule 13 (arit -> arit operatorA arit .)
    TkThen          reduce using rule 13 (arit -> arit operatorA arit .)
    TkRepeat        reduce using rule 13 (arit -> arit operatorA arit .)
    TkSuma          shift and go to state 40
    TkResta         shift and go to state 35
    TkMult          shift and go to state 38
    TkDiv           shift and go to state 37
    TkMod           shift and go to state 36

  ! TkSuma          [ reduce using rule 13 (arit -> arit operatorA arit .) ]
  ! TkResta         [ reduce using rule 13 (arit -> arit operatorA arit .) ]
  ! TkMult          [ reduce using rule 13 (arit -> arit operatorA arit .) ]
  ! TkDiv           [ reduce using rule 13 (arit -> arit operatorA arit .) ]
  ! TkMod           [ reduce using rule 13 (arit -> arit operatorA arit .) ]

    operatorA                      shift and go to state 39

state 68

    (29) lienzo -> lienzo operatorL lienzo .
    (29) lienzo -> lienzo . operatorL lienzo
    (32) lienzo -> lienzo . TkTras
    (47) operatorL -> . TkHorConcat
    (48) operatorL -> . TkVerConcat

  ! shift/reduce conflict for TkTras resolved as shift
  ! shift/reduce conflict for TkHorConcat resolved as shift
  ! shift/reduce conflict for TkVerConcat resolved as shift
    TkNegacion      reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkMenor         reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkMenorIgual    reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkMayor         reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkMayorIgual    reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkIgual         reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkDesIgual      reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkConjuncion    reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkDisyuncion    reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkPuntoYComa    reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    $end            reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkThen          reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkParCierra     reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkRepeat        reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkElse          reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkDone          reduce using rule 29 (lienzo -> lienzo operatorL lienzo .)
    TkTras          shift and go to state 43
    TkHorConcat     shift and go to state 42
    TkVerConcat     shift and go to state 41

  ! TkTras          [ reduce using rule 29 (lienzo -> lienzo operatorL lienzo .) ]
  ! TkHorConcat     [ reduce using rule 29 (lienzo -> lienzo operatorL lienzo .) ]
  ! TkVerConcat     [ reduce using rule 29 (lienzo -> lienzo operatorL lienzo .) ]

    operatorL                      shift and go to state 44

state 69

    (23) booleana -> booleana operatorB lienzo .
    (29) lienzo -> lienzo . operatorL lienzo
    (32) lienzo -> lienzo . TkTras
    (47) operatorL -> . TkHorConcat
    (48) operatorL -> . TkVerConcat

    TkParCierra     reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkNegacion      reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkMenor         reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkMenorIgual    reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkMayor         reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkMayorIgual    reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkIgual         reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkDesIgual      reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkConjuncion    reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkDisyuncion    reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkElse          reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkDone          reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkThen          reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkRepeat        reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkPuntoYComa    reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    $end            reduce using rule 23 (booleana -> booleana operatorB lienzo .)
    TkTras          shift and go to state 43
    TkHorConcat     shift and go to state 42
    TkVerConcat     shift and go to state 41

    operatorL                      shift and go to state 44

state 70

    (28) booleana -> TkIdent .
    (17) arit -> TkIdent .

  ! reduce/reduce conflict for TkParCierra resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkNegacion resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkMenor resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkMenorIgual resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkMayor resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkMayorIgual resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkIgual resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkDesIgual resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkConjuncion resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkDisyuncion resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkPuntoYComa resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for $end resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkThen resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkRepeat resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkElse resolved using rule 17 (arit -> TkIdent .)
  ! reduce/reduce conflict for TkDone resolved using rule 17 (arit -> TkIdent .)
    TkParCierra     reduce using rule 17 (arit -> TkIdent .)
    TkSuma          reduce using rule 17 (arit -> TkIdent .)
    TkResta         reduce using rule 17 (arit -> TkIdent .)
    TkMult          reduce using rule 17 (arit -> TkIdent .)
    TkDiv           reduce using rule 17 (arit -> TkIdent .)
    TkMod           reduce using rule 17 (arit -> TkIdent .)
    TkNegacion      reduce using rule 17 (arit -> TkIdent .)
    TkMenor         reduce using rule 17 (arit -> TkIdent .)
    TkMenorIgual    reduce using rule 17 (arit -> TkIdent .)
    TkMayor         reduce using rule 17 (arit -> TkIdent .)
    TkMayorIgual    reduce using rule 17 (arit -> TkIdent .)
    TkIgual         reduce using rule 17 (arit -> TkIdent .)
    TkDesIgual      reduce using rule 17 (arit -> TkIdent .)
    TkConjuncion    reduce using rule 17 (arit -> TkIdent .)
    TkDisyuncion    reduce using rule 17 (arit -> TkIdent .)
    TkPuntoYComa    reduce using rule 17 (arit -> TkIdent .)
    $end            reduce using rule 17 (arit -> TkIdent .)
    TkThen          reduce using rule 17 (arit -> TkIdent .)
    TkRepeat        reduce using rule 17 (arit -> TkIdent .)
    TkElse          reduce using rule 17 (arit -> TkIdent .)
    TkDone          reduce using rule 17 (arit -> TkIdent .)

  ! TkParCierra     [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkNegacion      [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkMenor         [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkMenorIgual    [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkMayor         [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkMayorIgual    [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkIgual         [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkDesIgual      [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkConjuncion    [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkDisyuncion    [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkPuntoYComa    [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! $end            [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkThen          [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkRepeat        [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkElse          [ reduce using rule 28 (booleana -> TkIdent .) ]
  ! TkDone          [ reduce using rule 28 (booleana -> TkIdent .) ]


state 71

    (21) booleana -> booleana operatorB booleana .
    (21) booleana -> booleana . operatorB booleana
    (22) booleana -> booleana . operatorB arit
    (23) booleana -> booleana . operatorB lienzo
    (25) booleana -> booleana . TkNegacion
    (39) operatorB -> . TkMenor
    (40) operatorB -> . TkMenorIgual
    (41) operatorB -> . TkMayor
    (42) operatorB -> . TkMayorIgual
    (43) operatorB -> . TkIgual
    (44) operatorB -> . TkDesIgual
    (45) operatorB -> . TkConjuncion
    (46) operatorB -> . TkDisyuncion

  ! shift/reduce conflict for TkNegacion resolved as shift
  ! shift/reduce conflict for TkMenor resolved as shift
  ! shift/reduce conflict for TkMenorIgual resolved as shift
  ! shift/reduce conflict for TkMayor resolved as shift
  ! shift/reduce conflict for TkMayorIgual resolved as shift
  ! shift/reduce conflict for TkIgual resolved as shift
  ! shift/reduce conflict for TkDesIgual resolved as shift
  ! shift/reduce conflict for TkConjuncion resolved as shift
  ! shift/reduce conflict for TkDisyuncion resolved as shift
    TkParCierra     reduce using rule 21 (booleana -> booleana operatorB booleana .)
    TkElse          reduce using rule 21 (booleana -> booleana operatorB booleana .)
    TkDone          reduce using rule 21 (booleana -> booleana operatorB booleana .)
    TkThen          reduce using rule 21 (booleana -> booleana operatorB booleana .)
    TkRepeat        reduce using rule 21 (booleana -> booleana operatorB booleana .)
    TkPuntoYComa    reduce using rule 21 (booleana -> booleana operatorB booleana .)
    $end            reduce using rule 21 (booleana -> booleana operatorB booleana .)
    TkNegacion      shift and go to state 46
    TkMenor         shift and go to state 52
    TkMenorIgual    shift and go to state 45
    TkMayor         shift and go to state 49
    TkMayorIgual    shift and go to state 51
    TkIgual         shift and go to state 50
    TkDesIgual      shift and go to state 47
    TkConjuncion    shift and go to state 48
    TkDisyuncion    shift and go to state 54

  ! TkNegacion      [ reduce using rule 21 (booleana -> booleana operatorB booleana .) ]
  ! TkMenor         [ reduce using rule 21 (booleana -> booleana operatorB booleana .) ]
  ! TkMenorIgual    [ reduce using rule 21 (booleana -> booleana operatorB booleana .) ]
  ! TkMayor         [ reduce using rule 21 (booleana -> booleana operatorB booleana .) ]
  ! TkMayorIgual    [ reduce using rule 21 (booleana -> booleana operatorB booleana .) ]
  ! TkIgual         [ reduce using rule 21 (booleana -> booleana operatorB booleana .) ]
  ! TkDesIgual      [ reduce using rule 21 (booleana -> booleana operatorB booleana .) ]
  ! TkConjuncion    [ reduce using rule 21 (booleana -> booleana operatorB booleana .) ]
  ! TkDisyuncion    [ reduce using rule 21 (booleana -> booleana operatorB booleana .) ]

    operatorB                      shift and go to state 53

state 72

    (24) booleana -> TkParAbre . booleana TkParCierra
    (15) arit -> TkParAbre . arit TkParCierra
    (30) lienzo -> TkParAbre . lienzo TkParCierra
    (21) booleana -> . booleana operatorB booleana
    (22) booleana -> . booleana operatorB arit
    (23) booleana -> . booleana operatorB lienzo
    (24) booleana -> . TkParAbre booleana TkParCierra
    (25) booleana -> . booleana TkNegacion
    (26) booleana -> . TkTrue
    (27) booleana -> . TkFalse
    (28) booleana -> . TkIdent
    (13) arit -> . arit operatorA arit
    (14) arit -> . TkResta arit
    (15) arit -> . TkParAbre arit TkParCierra
    (16) arit -> . TkNum
    (17) arit -> . TkIdent
    (29) lienzo -> . lienzo operatorL lienzo
    (30) lienzo -> . TkParAbre lienzo TkParCierra
    (31) lienzo -> . TkRot lienzo
    (32) lienzo -> . lienzo TkTras
    (33) lienzo -> . TkLienzo

    TkParAbre       shift and go to state 72
    TkTrue          shift and go to state 13
    TkFalse         shift and go to state 4
    TkIdent         shift and go to state 70
    TkResta         shift and go to state 1
    TkNum           shift and go to state 5
    TkRot           shift and go to state 15
    TkLienzo        shift and go to state 19

    lienzo                         shift and go to state 28
    arit                           shift and go to state 31
    booleana                       shift and go to state 30

state 73

    (22) booleana -> booleana operatorB arit .
    (13) arit -> arit . operatorA arit
    (34) operatorA -> . TkSuma
    (35) operatorA -> . TkResta
    (36) operatorA -> . TkMult
    (37) operatorA -> . TkDiv
    (38) operatorA -> . TkMod

    TkParCierra     reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkNegacion      reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkMenor         reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkMenorIgual    reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkMayor         reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkMayorIgual    reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkIgual         reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkDesIgual      reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkConjuncion    reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkDisyuncion    reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkElse          reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkDone          reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkThen          reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkRepeat        reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkPuntoYComa    reduce using rule 22 (booleana -> booleana operatorB arit .)
    $end            reduce using rule 22 (booleana -> booleana operatorB arit .)
    TkSuma          shift and go to state 40
    TkResta         shift and go to state 35
    TkMult          shift and go to state 38
    TkDiv           shift and go to state 37
    TkMod           shift and go to state 36

    operatorA                      shift and go to state 39

state 74

    (1) expr -> expr TkPuntoYComa instr .

    TkPuntoYComa    reduce using rule 1 (expr -> expr TkPuntoYComa instr .)
    $end            reduce using rule 1 (expr -> expr TkPuntoYComa instr .)


state 75

    (9) instr -> TkFrom TkNum TkTo . TkNum TkRepeat instr TkDone

    TkNum           shift and go to state 79


state 76

    (5) instr -> TkIf booleana TkThen instr . TkElse instr TkDone
    (6) instr -> TkIf booleana TkThen instr . TkDone

    TkElse          shift and go to state 80
    TkDone          shift and go to state 81


state 77

    (8) instr -> TkWith TkIdent TkFrom TkNum . TkTo TkNum TkRepeat instr TkDone

    TkTo            shift and go to state 82


state 78

    (7) instr -> TkWhile booleana TkRepeat instr . TkDone

    TkDone          shift and go to state 83


state 79

    (9) instr -> TkFrom TkNum TkTo TkNum . TkRepeat instr TkDone

    TkRepeat        shift and go to state 84


state 80

    (5) instr -> TkIf booleana TkThen instr TkElse . instr TkDone
    (4) instr -> . TkIdent TkAsignacion expbin
    (5) instr -> . TkIf booleana TkThen instr TkElse instr TkDone
    (6) instr -> . TkIf booleana TkThen instr TkDone
    (7) instr -> . TkWhile booleana TkRepeat instr TkDone
    (8) instr -> . TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
    (9) instr -> . TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
    (10) instr -> . TkPrint TkLienzo
    (11) instr -> . TkRead TkIdent
    (12) instr -> . expbin
    (18) expbin -> . arit
    (19) expbin -> . booleana
    (20) expbin -> . lienzo
    (13) arit -> . arit operatorA arit
    (14) arit -> . TkResta arit
    (15) arit -> . TkParAbre arit TkParCierra
    (16) arit -> . TkNum
    (17) arit -> . TkIdent
    (21) booleana -> . booleana operatorB booleana
    (22) booleana -> . booleana operatorB arit
    (23) booleana -> . booleana operatorB lienzo
    (24) booleana -> . TkParAbre booleana TkParCierra
    (25) booleana -> . booleana TkNegacion
    (26) booleana -> . TkTrue
    (27) booleana -> . TkFalse
    (28) booleana -> . TkIdent
    (29) lienzo -> . lienzo operatorL lienzo
    (30) lienzo -> . TkParAbre lienzo TkParCierra
    (31) lienzo -> . TkRot lienzo
    (32) lienzo -> . lienzo TkTras
    (33) lienzo -> . TkLienzo

    TkIdent         shift and go to state 9
    TkIf            shift and go to state 2
    TkWhile         shift and go to state 10
    TkWith          shift and go to state 6
    TkFrom          shift and go to state 17
    TkPrint         shift and go to state 20
    TkRead          shift and go to state 8
    TkResta         shift and go to state 1
    TkParAbre       shift and go to state 7
    TkNum           shift and go to state 5
    TkTrue          shift and go to state 13
    TkFalse         shift and go to state 4
    TkRot           shift and go to state 15
    TkLienzo        shift and go to state 19

    instr                          shift and go to state 85
    lienzo                         shift and go to state 12
    expbin                         shift and go to state 18
    booleana                       shift and go to state 14
    arit                           shift and go to state 11

state 81

    (6) instr -> TkIf booleana TkThen instr TkDone .

    TkDone          reduce using rule 6 (instr -> TkIf booleana TkThen instr TkDone .)
    TkPuntoYComa    reduce using rule 6 (instr -> TkIf booleana TkThen instr TkDone .)
    $end            reduce using rule 6 (instr -> TkIf booleana TkThen instr TkDone .)
    TkElse          reduce using rule 6 (instr -> TkIf booleana TkThen instr TkDone .)


state 82

    (8) instr -> TkWith TkIdent TkFrom TkNum TkTo . TkNum TkRepeat instr TkDone

    TkNum           shift and go to state 86


state 83

    (7) instr -> TkWhile booleana TkRepeat instr TkDone .

    TkDone          reduce using rule 7 (instr -> TkWhile booleana TkRepeat instr TkDone .)
    TkPuntoYComa    reduce using rule 7 (instr -> TkWhile booleana TkRepeat instr TkDone .)
    $end            reduce using rule 7 (instr -> TkWhile booleana TkRepeat instr TkDone .)
    TkElse          reduce using rule 7 (instr -> TkWhile booleana TkRepeat instr TkDone .)


state 84

    (9) instr -> TkFrom TkNum TkTo TkNum TkRepeat . instr TkDone
    (4) instr -> . TkIdent TkAsignacion expbin
    (5) instr -> . TkIf booleana TkThen instr TkElse instr TkDone
    (6) instr -> . TkIf booleana TkThen instr TkDone
    (7) instr -> . TkWhile booleana TkRepeat instr TkDone
    (8) instr -> . TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
    (9) instr -> . TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
    (10) instr -> . TkPrint TkLienzo
    (11) instr -> . TkRead TkIdent
    (12) instr -> . expbin
    (18) expbin -> . arit
    (19) expbin -> . booleana
    (20) expbin -> . lienzo
    (13) arit -> . arit operatorA arit
    (14) arit -> . TkResta arit
    (15) arit -> . TkParAbre arit TkParCierra
    (16) arit -> . TkNum
    (17) arit -> . TkIdent
    (21) booleana -> . booleana operatorB booleana
    (22) booleana -> . booleana operatorB arit
    (23) booleana -> . booleana operatorB lienzo
    (24) booleana -> . TkParAbre booleana TkParCierra
    (25) booleana -> . booleana TkNegacion
    (26) booleana -> . TkTrue
    (27) booleana -> . TkFalse
    (28) booleana -> . TkIdent
    (29) lienzo -> . lienzo operatorL lienzo
    (30) lienzo -> . TkParAbre lienzo TkParCierra
    (31) lienzo -> . TkRot lienzo
    (32) lienzo -> . lienzo TkTras
    (33) lienzo -> . TkLienzo

    TkIdent         shift and go to state 9
    TkIf            shift and go to state 2
    TkWhile         shift and go to state 10
    TkWith          shift and go to state 6
    TkFrom          shift and go to state 17
    TkPrint         shift and go to state 20
    TkRead          shift and go to state 8
    TkResta         shift and go to state 1
    TkParAbre       shift and go to state 7
    TkNum           shift and go to state 5
    TkTrue          shift and go to state 13
    TkFalse         shift and go to state 4
    TkRot           shift and go to state 15
    TkLienzo        shift and go to state 19

    instr                          shift and go to state 87
    lienzo                         shift and go to state 12
    expbin                         shift and go to state 18
    booleana                       shift and go to state 14
    arit                           shift and go to state 11

state 85

    (5) instr -> TkIf booleana TkThen instr TkElse instr . TkDone

    TkDone          shift and go to state 88


state 86

    (8) instr -> TkWith TkIdent TkFrom TkNum TkTo TkNum . TkRepeat instr TkDone

    TkRepeat        shift and go to state 89


state 87

    (9) instr -> TkFrom TkNum TkTo TkNum TkRepeat instr . TkDone

    TkDone          shift and go to state 90


state 88

    (5) instr -> TkIf booleana TkThen instr TkElse instr TkDone .

    TkDone          reduce using rule 5 (instr -> TkIf booleana TkThen instr TkElse instr TkDone .)
    TkPuntoYComa    reduce using rule 5 (instr -> TkIf booleana TkThen instr TkElse instr TkDone .)
    $end            reduce using rule 5 (instr -> TkIf booleana TkThen instr TkElse instr TkDone .)
    TkElse          reduce using rule 5 (instr -> TkIf booleana TkThen instr TkElse instr TkDone .)


state 89

    (8) instr -> TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat . instr TkDone
    (4) instr -> . TkIdent TkAsignacion expbin
    (5) instr -> . TkIf booleana TkThen instr TkElse instr TkDone
    (6) instr -> . TkIf booleana TkThen instr TkDone
    (7) instr -> . TkWhile booleana TkRepeat instr TkDone
    (8) instr -> . TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
    (9) instr -> . TkFrom TkNum TkTo TkNum TkRepeat instr TkDone
    (10) instr -> . TkPrint TkLienzo
    (11) instr -> . TkRead TkIdent
    (12) instr -> . expbin
    (18) expbin -> . arit
    (19) expbin -> . booleana
    (20) expbin -> . lienzo
    (13) arit -> . arit operatorA arit
    (14) arit -> . TkResta arit
    (15) arit -> . TkParAbre arit TkParCierra
    (16) arit -> . TkNum
    (17) arit -> . TkIdent
    (21) booleana -> . booleana operatorB booleana
    (22) booleana -> . booleana operatorB arit
    (23) booleana -> . booleana operatorB lienzo
    (24) booleana -> . TkParAbre booleana TkParCierra
    (25) booleana -> . booleana TkNegacion
    (26) booleana -> . TkTrue
    (27) booleana -> . TkFalse
    (28) booleana -> . TkIdent
    (29) lienzo -> . lienzo operatorL lienzo
    (30) lienzo -> . TkParAbre lienzo TkParCierra
    (31) lienzo -> . TkRot lienzo
    (32) lienzo -> . lienzo TkTras
    (33) lienzo -> . TkLienzo

    TkIdent         shift and go to state 9
    TkIf            shift and go to state 2
    TkWhile         shift and go to state 10
    TkWith          shift and go to state 6
    TkFrom          shift and go to state 17
    TkPrint         shift and go to state 20
    TkRead          shift and go to state 8
    TkResta         shift and go to state 1
    TkParAbre       shift and go to state 7
    TkNum           shift and go to state 5
    TkTrue          shift and go to state 13
    TkFalse         shift and go to state 4
    TkRot           shift and go to state 15
    TkLienzo        shift and go to state 19

    instr                          shift and go to state 91
    lienzo                         shift and go to state 12
    expbin                         shift and go to state 18
    booleana                       shift and go to state 14
    arit                           shift and go to state 11

state 90

    (9) instr -> TkFrom TkNum TkTo TkNum TkRepeat instr TkDone .

    TkDone          reduce using rule 9 (instr -> TkFrom TkNum TkTo TkNum TkRepeat instr TkDone .)
    TkPuntoYComa    reduce using rule 9 (instr -> TkFrom TkNum TkTo TkNum TkRepeat instr TkDone .)
    $end            reduce using rule 9 (instr -> TkFrom TkNum TkTo TkNum TkRepeat instr TkDone .)
    TkElse          reduce using rule 9 (instr -> TkFrom TkNum TkTo TkNum TkRepeat instr TkDone .)


state 91

    (8) instr -> TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr . TkDone

    TkDone          shift and go to state 92


state 92

    (8) instr -> TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone .

    TkDone          reduce using rule 8 (instr -> TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone .)
    TkPuntoYComa    reduce using rule 8 (instr -> TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone .)
    $end            reduce using rule 8 (instr -> TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone .)
    TkElse          reduce using rule 8 (instr -> TkWith TkIdent TkFrom TkNum TkTo TkNum TkRepeat instr TkDone .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TkSuma in state 67 resolved as shift
WARNING: shift/reduce conflict for TkResta in state 67 resolved as shift
WARNING: shift/reduce conflict for TkMult in state 67 resolved as shift
WARNING: shift/reduce conflict for TkDiv in state 67 resolved as shift
WARNING: shift/reduce conflict for TkMod in state 67 resolved as shift
WARNING: shift/reduce conflict for TkTras in state 68 resolved as shift
WARNING: shift/reduce conflict for TkHorConcat in state 68 resolved as shift
WARNING: shift/reduce conflict for TkVerConcat in state 68 resolved as shift
WARNING: shift/reduce conflict for TkNegacion in state 71 resolved as shift
WARNING: shift/reduce conflict for TkMenor in state 71 resolved as shift
WARNING: shift/reduce conflict for TkMenorIgual in state 71 resolved as shift
WARNING: shift/reduce conflict for TkMayor in state 71 resolved as shift
WARNING: shift/reduce conflict for TkMayorIgual in state 71 resolved as shift
WARNING: shift/reduce conflict for TkIgual in state 71 resolved as shift
WARNING: shift/reduce conflict for TkDesIgual in state 71 resolved as shift
WARNING: shift/reduce conflict for TkConjuncion in state 71 resolved as shift
WARNING: shift/reduce conflict for TkDisyuncion in state 71 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (arit -> TkIdent)
WARNING: rejected rule (booleana -> TkIdent) in state 9
WARNING: reduce/reduce conflict in state 29 resolved using rule (arit -> TkIdent)
WARNING: rejected rule (booleana -> TkIdent) in state 29
WARNING: reduce/reduce conflict in state 70 resolved using rule (arit -> TkIdent)
WARNING: rejected rule (booleana -> TkIdent) in state 70
